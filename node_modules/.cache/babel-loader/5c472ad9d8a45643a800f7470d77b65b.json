{"ast":null,"code":"var _jsxFileName = \"/Users/ashleysweatt/Desktop/Coding/Lesson as March 7/19-react/02-Homework/clickygame/src/App.js\";\nimport React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      friends: friends,\n      clickedFriends: []\n    };\n\n    this.clickCharacter = id => {\n      console.log(\"clickCharacter\");\n      console.log(id); // Filter this.state.friends for friends with an id not equal to the id being removed\n      // const friends = this.state.friends.filter(friend => friend.id !== id);\n      // Set this.state.friends equal to the new friends array\n      // this.setState({ friends });\n      //if id has been clicked previously restart counter and empty array, else award a point and save id number into array\n      //  if(clickedFriends)\n    };\n  }\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Clicky Game\"), this.state.friends.map(friend => React.createElement(FriendCard, {\n      id: friend.id,\n      key: friend.id,\n      name: friend.name,\n      image: friend.image,\n      clickCharacter: this.clickCharacter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ashleysweatt/Desktop/Coding/Lesson as March 7/19-react/02-Homework/clickygame/src/App.js"],"names":["React","Component","FriendCard","Wrapper","Title","friends","App","state","clickedFriends","clickCharacter","id","console","log","render","map","friend","name","image"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,gBAApB;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BM,KAF0B,GAElB;AACNF,MAAAA,OAAO,EAACA,OADF;AAENG,MAAAA,cAAc,EAAE;AAFV,KAFkB;;AAAA,SAO1BC,cAP0B,GAOTC,EAAE,IAAI;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ,EAFqB,CAGrB;AACA;AACA;AACA;AAEA;AACA;AAGD,KAnByB;AAAA;;AAsB1B;AACAG,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEG,KAAKN,KAAL,CAAWF,OAAX,CAAmBS,GAAnB,CAAuBC,MAAM,IAC5B,oBAAC,UAAD;AACE,MAAA,EAAE,EAAEA,MAAM,CAACL,EADb;AAEE,MAAA,GAAG,EAAEK,MAAM,CAACL,EAFd;AAGE,MAAA,IAAI,EAAEK,MAAM,CAACC,IAHf;AAIE,MAAA,KAAK,EAAED,MAAM,CAACE,KAJhB;AAKE,MAAA,cAAc,EAAE,KAAKR,cALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAFH,CADF;AAcD;;AAtCyB;;AAyC5B,eAAeH,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends:friends,\n    clickedFriends: []\n  };\n\n  clickCharacter = id => {\n    console.log(\"clickCharacter\");\n    console.log(id);\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    // const friends = this.state.friends.filter(friend => friend.id !== id);\n    // Set this.state.friends equal to the new friends array\n    // this.setState({ friends });\n\n    //if id has been clicked previously restart counter and empty array, else award a point and save id number into array\n    //  if(clickedFriends)\n\n    \n  };\n  \n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Title>Clicky Game</Title>\n        {this.state.friends.map(friend => (\n          <FriendCard\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n            clickCharacter={this.clickCharacter}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}